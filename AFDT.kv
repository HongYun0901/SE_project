<UI>:
	#background color
	canvas.before: 
        Color: 
			rgb: 0, 0, 0
        Rectangle: 
            pos: self.pos 
            size: self.size 				
	
	#UI reference
	sysMessageLabel:sysMessageLabel
	displayCode:displayCode
	orientation: 'vertical'
	uiImage:uiImage
	# component
	BoxLayout:
		orientation: 'horizontal'
		size_hint_y: 0.9
		spacing: 2		
		ButtonList:			
		DisplayCode:
			id:displayCode
		BoxLayout:
			size_hint_x: 0.4
			UIImage:
				id:uiImage
	SysMessage:
		id:sysMessageLabel

<UIImage>:
	Image:
		source: 'exampleflow.png'



<DisplayImage>:
	Image:
		source: 'exampleflow.png'
		allow_stretch: True
		keep_ratio: True
		
<ButtonList>:
	orientation: 'vertical'
	size_hint_x: 0.2		
	Button:
		text: 'Import file'
		on_release:root.importFile()
	Button:
		text: 'Draw Diagram'	
	Button:
		text: 'Clear'	
		on_release:root.clear()
	Button:
		text: 'Save Image'
		on_release:root.saveFile()
	Button:
		text: 'view Image'
		on_release:root.viewImage()

<floatImage>
	BoxLayout:
		pos: root.pos
		DisplayImage:
	
<DisplayCode>
	text: ''
	size_hint_x: 0.4	
	
	Label:
		text: root.text
		text_size: root.width, None
		size_hint_y: None
		height: self.texture_size[1]
		

<SysMessage>:		
    size_hint_y: 0.2
	text: 'Welcome to AFDT'
	canvas.before: 
        Color: 
			rgb: .5, .5, .4
        Rectangle: 
            pos: self.pos 
            size: self.size 				
	
 


<LoadDialog>:
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser

        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: root.cancel()

            Button:
                text: "Load"
                on_release: root.load(filechooser.path, filechooser.selection)

<SaveDialog>:
    text_input: text_input
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
            on_selection: text_input.text = self.selection and self.selection[0] or ''

        TextInput:
            id: text_input
            size_hint_y: None
            height: 30
            multiline: False

        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: root.cancel()

            Button:
                text: "Save"
                on_release: root.save(filechooser.path, text_input.text)